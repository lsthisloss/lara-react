services:
  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-backend
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html
      - ./backend/vendor:/var/www/html/vendor
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "php artisan migrate --force &&
             php artisan db:seed --force --class=UserSeeder &&
             php artisan db:seed --force --class=PostSeeder &&
             php-fpm"
    healthcheck:
      test: ["CMD-SHELL", "php artisan tinker --execute='echo \"Backend ready\";'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx for Laravel
  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network
    depends_on:
      - backend

  # Database
  db:
    image: postgres:15
    container_name: laravel-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U laravel -d laravel"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
